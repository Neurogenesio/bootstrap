/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

final File bootstrapDir = "$buildDir/bootstrap" as File
final File versionSnapshot = "$bootstrapDir/artifact-snapshot.properties" as File
final File configDir = "$rootDir/config" as File

sourceSets.main.resources.srcDir(bootstrapDir)

final String taskGroup = 'Spine bootstrapping'

task copyModelCompilerConfig(type: Copy) {
    it.group = taskGroup
    
    from file("$configDir/gradle/model-compiler.gradle")
    into file(bootstrapDir)

    processResources.dependsOn it

    doFirst {
        bootstrapDir.mkdirs()
    }
}

task writeDependencies {
    it.group = taskGroup
    
    inputs.dir(configDir)
    inputs.property('version', spineVersion)
    outputs.file(versionSnapshot)

    processResources.dependsOn it

    doFirst {
        bootstrapDir.mkdirs()
        if (!versionSnapshot.exists()) {
            versionSnapshot.createNewFile()
        }
    }

    doLast {
        final Properties artifacts = new Properties()
        
        artifacts.setProperty('spine.version', spineVersion)
        artifacts.setProperty('protobuf.compiler', deps.build.protoc)
        artifacts.setProperty('grpc.stub', deps.grpc.grpcStub)
        artifacts.setProperty('grpc.protobuf', deps.grpc.grpcProtobuf)
        artifacts.setProperty('repository.spine.release', repos.spine)
        artifacts.setProperty('repository.spine.snapshot', repos.spineSnapshots)
        
        artifacts.store(
                versionSnapshot.newWriter('UTF-8'),
                'Dependencies and versions required by Spine.'
        )
    }
}

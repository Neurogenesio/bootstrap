/*
 * Copyright 2020, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id "com.github.johnrengelman.shadow" version "5.1.0"
}

apply from: "$rootDir/gradle/plugin.gradle"
apply from: "$rootDir/gradle/func-test-env.gradle"
apply from: "$rootDir/gradle/prepare-config-resources.gradle"

dependencies {
    implementation(
            gradleApi(),
            deps.build.gradlePlugins.protobuf,
            "io.spine.tools:spine-plugin-base:$spineVersion",
            "io.spine.tools:spine-model-compiler:$spineVersion",
            "io.spine.tools:spine-proto-js-plugin:$spineVersion",
    )
    testImplementation(
            "io.spine:spine-testlib:$spineVersion",
            "io.spine.tools:spine-plugin-testlib:$spineVersion"
    )
}

final targetResourceDir = "$buildDir/compiledResources/"

task prepareBuildScript(type: Copy) { final Copy task ->
    description = 'Creates the `build.gradle` script which is executed in functional tests of the plugin.'

    from "$projectDir/src/test/build.gradle.template"
    into targetResourceDir

    rename { final _ -> 'build.gradle' }
    filter(ReplaceTokens, tokens: ['spine-version': spineVersion])
}

processTestResources.dependsOn 'prepareBuildScript'

sourceSets {
    test.resources.srcDir(targetResourceDir)
}
